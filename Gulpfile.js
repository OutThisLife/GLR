// Generated by CoffeeScript 1.10.0
(function() {
  var babelify, browserify, buffer, buildScript, cssmin, gulp, gulpif, gutil, imagemin, livereload, rename, sass, source, uglify, watchify;

  source = require('vinyl-source-stream');

  buffer = require('vinyl-buffer');

  gulp = require('gulp');

  gulpif = require('gulp-if');

  sass = require('gulp-sass');

  gutil = require('gulp-util');

  uglify = require('gulp-uglify');

  cssmin = require('gulp-cssmin');

  imagemin = require('gulp-imagemin');

  rename = require('gulp-rename');

  browserify = require('browserify');

  babelify = require('babelify');

  watchify = require('watchify');

  livereload = require('gulp-livereload');

  buildScript = function(watch) {
    var bundler, props, rebundle;
    props = {
      entries: ['assets/js/main.js'],
      debug: false,
      transform: [
        babelify.configure({
          presets: ['es2015', 'react']
        })
      ]
    };
    bundler = browserify(props);
    if (watch) {
      bundler = watchify(bundler);
    }
    rebundle = function() {
      var stream;
      stream = bundler.bundle();
      return stream.on('error', function(e) {
        return console.log(e.message);
      }).pipe(source('main.js')).pipe(buffer()).pipe(uglify()).pipe(rename('bundle.js')).pipe(gulp.dest('assets/js')).pipe(livereload());
    };
    bundler.on('update', function() {
      rebundle();
      return gutil.log('Rebundle...');
    });
    return rebundle();
  };

  gulp.task('sass', function() {
    return gulp.src('assets/css/main.sass').pipe(sass().on('error', sass.logError)).pipe(rename('bundle.css')).pipe(cssmin()).pipe(gulp.dest('assets/css')).pipe(livereload());
  });

  gulp.task('js', function() {
    return buildScript(false);
  });

  gulp.task('images', function() {
    return gulp.src('assets/img/*.{jpg,png}').pipe(imagemin({
      progressive: true
    })).pipe(gulp.dest('assets/img')).pipe(livereload());
  });

  gulp.task('htmlphp', function() {
    return gulp.src(['*.php', '*.html']).pipe(livereload());
  });

  gulp.task('default', function() {
    livereload.listen();
    buildScript(true);
    gulp.watch(['assets/css/**/*.sass'], ['sass']);
    return gulp.watch(['*.php', '*.html'], ['htmlphp']);
  });

}).call(this);
